# File: docker/frontend/Dockerfile.prod
# Usage: Build from project root with context: . and dockerfile: docker/frontend/Dockerfile.prod

# ─── Stage 1: Build ─────────────────────────────────────────────────────

FROM node:18-alpine AS builder

WORKDIR /app

# 📦 Install dependencies from jamz-client-vite
COPY jamz-client-vite/package*.json ./
RUN npm ci

# 📁 Copy app source from jamz-client-vite
COPY jamz-client-vite/index.html ./
COPY jamz-client-vite/vite.config.js ./
COPY jamz-client-vite/src ./src
COPY jamz-client-vite/public ./public

# 🌐 Set build-time environment variables
ENV NODE_ENV=production
ENV REACT_APP_API_URL=/api
ENV REACT_APP_WEBRTC_URL=/webrtc

# 🏗️ Build the Vite application
RUN npm run build


# ─── Stage 2: Serve with NGINX ───────────────────────────────────────────

FROM nginx:stable-alpine

WORKDIR /usr/share/nginx/html

# 🔐 Install openssl and generate self-signed certs so nginx always has something to load
RUN apk add --no-cache openssl && \
    mkdir -p /etc/nginx/certs && \
    openssl req -x509 -nodes -days 365 \
      -subj "/CN=localhost" \
      -newkey rsa:2048 \
      -keyout /etc/nginx/certs/privkey.pem \
      -out /etc/nginx/certs/fullchain.pem

# 🚚 Transfer compiled assets from builder stage
COPY --from=builder /app/dist .

# ⚙️ Apply config from docker/frontend
COPY docker/frontend/nginx.dev.conf /etc/nginx/nginx.dev.conf

# 🔐 Drop in entrypoint from docker/frontend
COPY docker/frontend/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# 🚀 Launch container via TLS-aware entrypoint
CMD ["/entrypoint.sh"]

EXPOSE 80
EXPOSE 443
