openapi: 3.0.0
info:
  title: Audio Group Communication API
  description: API for real-time audio communication and location tracking app
  version: 1.0.0
  contact:
    name: API Support
    email: support@audiogroupapp.com

servers:
  - url: http://localhost:5000/api
    description: Development server
  - url: https://trafficjam.v2u.us/api
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        profile_image_url:
          type: string
          format: uri
        phone_number:
          type: string
        status:
          type: string
          enum: [active, inactive, suspended]
        preferences:
          type: object
        last_login:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Group:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        owner_id:
          type: string
          format: uuid
        avatar_url:
          type: string
          format: uri
        status:
          type: string
          enum: [active, inactive, archived]
        privacy_level:
          type: string
          enum: [public, private, secret]
        max_members:
          type: integer
        settings:
          type: object
        members:
          type: array
          items:
            type: object
        invitations:
          type: array
          items:
            type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    AudioSession:
      type: object
      properties:
        id:
          type: string
        group_id:
          type: string
        status:
          type: string
          enum: [active, ended, paused]
        creator_id:
          type: string
          format: uuid
        session_type:
          type: string
          enum: [voice_only, voice_with_music]
        recording_enabled:
          type: boolean
        participants:
          type: array
          items:
            type: object
        music:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Location:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        coordinates:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
            altitude:
              type: number
            accuracy:
              type: number
            heading:
              type: number
            speed:
              type: number
        device_id:
          type: string
        battery_level:
          type: number
        connection_type:
          type: string
          enum: [wifi, cellular, offline]
        privacy_level:
          type: string
          enum: [precise, approximate, hidden]
        shared_with_group_ids:
          type: array
          items:
            type: string

    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        plan_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [active, inactive, trial, expired]
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        auto_renew:
          type: boolean
        payment_method_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
          format: uuid
        type:
          type: string
          enum: [group_invite, proximity_alert, subscription, system]
        title:
          type: string
        body:
          type: string
        data:
          type: object
        read:
          type: boolean
        priority:
          type: string
          enum: [low, normal, high, critical]
        created_at:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              param:
                type: string
              msg:
                type: string

security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 30
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                first_name:
                  type: string
                last_name:
                  type: string
                phone_number:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Authenticate user & get token
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  token_type:
                    type: string
                    example: Bearer
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile:
    get:
      summary: Get current user profile
      tags:
        - Users
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /groups:
    get:
      summary: Get all groups for current user
      tags:
        - Groups
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [active, inactive, archived]
        - in: query
          name: role
          schema:
            type: string
            enum: [owner, admin, member]
      responses:
        '200':
          description: Groups retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new group
      tags:
        - Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 50
                description:
                  type: string
                privacy_level:
                  type: string
                  enum: [public, private, secret]
                max_members:
                  type: integer
                  minimum: 2
                  maximum: 100
                settings:
                  type: object
                avatar_url:
                  type: string
                  format: uri
      responses:
        '201':
          description: Group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  group:
                    $ref: '#/components/schemas/Group'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /audio/sessions:
    post:
      summary: Create a new audio session for a group
      tags:
        - Audio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - group_id
              properties:
                group_id:
                  type: string
                session_type:
                  type: string
                  enum: [voice_only, voice_with_music]
                recording_enabled:
                  type: boolean
                device_type:
                  type: string
                  enum: [ios, android, web]
      responses:
        '201':
          description: Audio session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  session:
                    $ref: '#/components/schemas/AudioSession'
                  rtpCapabilities:
                    type: object
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /location/update:
    post:
      summary: Update user location
      tags:
        - Location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coordinates
              properties:
                coordinates:
                  type: object
                  required:
                    - latitude
                    - longitude
                  properties:
                    latitude:
                      type: number
                      minimum: -90
                      maximum: 90
                    longitude:
                      type: number
                      minimum: -180
                      maximum: 180
                    altitude:
                      type: number
                    accuracy:
                      type: number
                    altitude_accuracy:
                      type: number
                    heading:
                      type: number
                    speed:
                      type: number
                device_id:
                  type: string
                battery_level:
                  type: number
                  minimum: 0
                  maximum: 100
                connection_type:
                  type: string
                  enum: [wifi, cellular, offline]
      responses:
        '201':
          description: Location updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  location:
                    $ref: '#/components/schemas/Location'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /subscriptions/plans:
    get:
      summary: Get all available subscription plans
      tags:
        - Subscriptions
      security: []
      responses:
        '200':
          description: Subscription plans retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  plans:
                    type: array
                    items:
                      type: object
        '400':
          description: Error retrieving plans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notifications/unread:
    get:
      summary: Get unread notifications for current user
      tags:
        - Notifications
      responses:
        '200':
          description: Unread notifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
