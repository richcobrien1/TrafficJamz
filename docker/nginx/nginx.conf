# File: docker/nginx/nginx.conf
# Purpose: Reverse proxy for TrafficJamz production stack
# Usage:
#   - Serves static frontend (Vite build) from /usr/share/nginx/html
#   - Proxies /api/* requests to backend service (server:5000)
#   - Provides SPA fallback so React/Vite routes (e.g. /auth/login) resolve to index.html
#   - Handles TLS if self-signed or real certs are mounted at /etc/nginx/certs
#   - Adds gzip compression and caching headers for better performance
#
# Notes:
#   - In production, only nginx ports 80/443 are exposed
#   - All other services (server, DBs, etc.) are private inside the Docker network
#   - Adjust ssl_certificate paths if you use real certs

events {}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

  # Enable gzip compression
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    font/opentype
    image/svg+xml;

  server {
    listen 80;
    listen 443 ssl;

    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    server_name _;

    # Serve built Vite frontend
    root /usr/share/nginx/html;
    index index.html;

    # Proxy API requests to backend
    location /api/ {
      proxy_pass         http://server:5000/;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection keep-alive;
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    # Cache static assets aggressively (fingerprinted filenames)
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
      expires 6M;
      access_log off;
      add_header Cache-Control "public, immutable";
    }

    # Ensure index.html is always fresh (short TTL)
    location = /index.html {
      expires 1m;
      add_header Cache-Control "no-cache, must-revalidate";
    }

    # Fallback for SPA routes (React/Vite)
    location / {
      index  index.html;
      try_files $uri $uri/ /index.html;
    }

    # Health endpoint for nginx itself
    location /health {
      return 200 'OK';
      add_header Content-Type text/plain;
    }
  }
}
