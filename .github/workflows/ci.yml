name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (disable mediasoup)
        env:
          DISABLE_MEDIASOUP: 'true'
          NODE_ENV: 'test'
        run: npm test --silent

      - name: Lint (optional)
        if: always()
        run: npm run lint --silent

  smoke:
    name: Smoke test (start server + socket smoke)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install server dependencies
        working-directory: ./jamz-server
        run: npm ci

      - name: Start server (disable mediasoup)
        working-directory: ./jamz-server
        env:
          DISABLE_MEDIASOUP: 'true'
          NODE_ENV: 'test'
          PORT: '5000'
        run: |
          # Start server in background and save PID
          npm start &
          echo $! > server.pid

      - name: Wait for server healthy
        run: |
          for i in {1..30}; do
            if curl -sSf http://localhost:5000/api/status >/dev/null 2>&1; then
              echo "server healthy"
              break
            fi
            echo "waiting for server... ($i)"
            sleep 1
          done

      - name: Run socket smoke script
        working-directory: ./jamz-server
        env:
          NODE_ENV: 'test'
        run: |
          node tests/socket-smoke.js

      - name: Stop server
        working-directory: ./jamz-server
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm -f server.pid
          fi
