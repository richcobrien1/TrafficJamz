# Created by Vercel CLI
API_VERSION="v1"

# Node Environment
NODE_ENV="development"

# APNS Configuration
APNS_BUNDLE_ID="com.audiogroupapp.ios"
APNS_KEY_FILE="path/to/AuthKey_KEYID.p8"
APNS_KEY_ID="your_apns_key_id"
APNS_TEAM_ID="your_apns_team_id"

# AWS Configuration
AWS_ACCESS_KEY_ID="your_aws_access_key"
AWS_REGION="us-east-1"
AWS_SECRET_ACCESS_KEY="your_aws_secret_key"

# Azure Storage
AZURE_STORAGE_CONNECTION_STRING="your_azure_connection_string"
AZURE_STORAGE_CONTAINER="audiogroupapp-media-azure"

# CORS Settings
CORS_ORIGIN="*"

# Firebase Cloud Messaging
FCM_SERVER_KEY="your_fcm_server_key"

# Google Cloud Platform
GCP_PROJECT_ID="your-gcp-project-id"
GCP_STORAGE_BUCKET="audiogroupapp-media-gcp"
GOOGLE_MAPS_API_KEY="your_google_maps_api_key"

# Security Settings
HELMET_CONTENT_SECURITY_POLICY="false"

# InfluxDB (Already using production values)
INFLUXDB_BUCKET="trafficjam"
INFLUXDB_ORG="V2U"
INFLUXDB_TOKEN="lf6L-WIkl8-BREIpcNkhNKERMHQd0M03ATZuydYYruY0kJh6K5gmj_HnyLKZdOwCxuhYFyOq8sjdylzx_KTQ9A=="
INFLUXDB_URL="https://us-east-1-1.aws.cloud2.influxdata.com"

# JWT Configuration
JWT_ACCESS_EXPIRATION="86400"
JWT_REFRESH_EXPIRATION="2592000"
JWT_SECRET="eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJUcmFmZmljSmFtIiwiVXNlcm5hbWUiOiJWMlUiLCJleHAiOjE3MTY1NjcyMzR9"

# Kafka (Update to production values if available)
KAFKA_BROKERS="your-cloud-kafka-brokers"  # Update from localhost:9092
KAFKA_CLIENT_ID="audiogroupapp"
KAFKA_GROUP_ID="audiogroupapp-group"

# Logging
LOG_DIR="../logs"
LOG_FORMAT="combined"
LOG_LEVEL="debug"

# MediaSoup (WebRTC)
MEDIASOUP_ANNOUNCED_IP="127.0.0.1"  # May need to update for production
MEDIASOUP_LISTEN_IP="0.0.0.0"
MEDIASOUP_MAX_PORT="10100"
MEDIASOUP_MIN_PORT="10000"

# MongoDB (Already using production values)
MONGODB_URI="mongodb+srv://richcobrien:1Topgun123@trafficjam.xk2uszk.mongodb.net/?retryWrites=true&w=majority&appName=trafficjam"

# Server Port
PORT="5000"

# PostgreSQL (Updated to use production values)
POSTGRES_DB="postgres"  # From POSTGRES_USER_POSTGRES_DATABASE
POSTGRES_HOST="db.nrlaqkpojtvvheosnpaz.supabase.co"  # From POSTGRES_USER_POSTGRES_HOST
POSTGRES_PASSWORD="tMRyyxjADUl63z44"  # From POSTGRES_USER_POSTGRES_PASSWORD
POSTGRES_PORT="6543"  # Using pooler port from POSTGRES_USER_POSTGRES_URL
POSTGRES_USER="postgres"  # From POSTGRES_USER_POSTGRES_USER

# Supabase Configuration (Already using production values)
SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ybGFxa3BvanR2dmhlb3NucGF6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQwNjc4NDEsImV4cCI6MjA1OTY0Mzg0MX0._up9k3roeCdWru1rn3xwk4W10vQfSflSw9tqbgaYtBk"
SUPABASE_JWT_SECRET="FmlvulzPgueFrGgKiZe6u5+m0K3yAi4yhNJKzDMN3qqYeESSW43zFPgYP9bKhlCxTU8iXT2fLpPwHlmlZpOdvA=="
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ybGFxa3BvanR2dmhlb3NucGF6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDA2Nzg0MSwiZXhwIjoyMDU5NjQzODQxfQ.4K1pqXQcR46pG8LBH1L5qQv_e915qs8VXopBLmOtAv0"
SUPABASE_URL="https://nrlaqkpojtvvheosnpaz.supabase.co"

# Rate Limiting
RATE_LIMIT_MAX="1000"
RATE_LIMIT_WINDOW_MS="60000"

# Redis (Update to production values if available)
REDIS_HOST="your-cloud-redis-host.com"  # Update from localhost
REDIS_PASSWORD="your-redis-password"  # Add if required
REDIS_PORT="6379"

# AWS S3
S3_BUCKET="audiogroupapp-media"

# Stripe
STRIPE_SECRET_KEY="your_stripe_secret_key"
STRIPE_WEBHOOK_SECRET="your_stripe_webhook_secret"

# WebRTC STUN/TURN
STUN_SERVER="stun:stun.l.google.com:19302"
TURN_CREDENTIAL="your_turn_credential"
TURN_SERVER="turn:your-turn-server.com:3478"
TURN_USERNAME="your_turn_username"

# Optional: Keep the prefixed variables if other parts of your code use them
# POSTGRES_USER_POSTGRES_DATABASE="postgres"
# POSTGRES_USER_POSTGRES_HOST="db.nrlaqkpojtvvheosnpaz.supabase.co"
# POSTGRES_USER_POSTGRES_PASSWORD="tMRyyxjADUl63z44"
# POSTGRES_USER_POSTGRES_PRISMA_URL="postgres://postgres.nrlaqkpojtvvheosnpaz:tMRyyxjADUl63z44@aws-0-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require&supa=base-pooler.x"
# POSTGRES_USER_POSTGRES_URL="postgres://postgres.nrlaqkpojtvvheosnpaz:tMRyyxjADUl63z44@aws-0-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require&supa=base-pooler.x"
# POSTGRES_USER_POSTGRES_URL_NON_POOLING="postgres://postgres.nrlaqkpojtvvheosnpaz:tMRyyxjADUl63z44@aws-0-us-east-1.pooler.supabase.com:5432/postgres?sslmode=require"
# POSTGRES_USER_POSTGRES_USER="postgres"
