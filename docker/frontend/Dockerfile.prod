# File: docker/frontend/Dockerfile.prod
# Usage: Build from project root with:
#   docker build -f docker/frontend/Dockerfile.prod -t trafficjamz-client .

# ─── Stage 1: Build ──────────────────────────────────────────────
FROM node:18-alpine AS builder

# Set working directory inside container
WORKDIR /app/jamz-client-vite

# 📦 Install dependencies
COPY jamz-client-vite/package*.json ./
RUN npm ci

# 📁 Copy app source
COPY jamz-client-vite/ .

# 🌐 Build-time env vars for Vite (must use VITE_ prefix)
ENV NODE_ENV=production
ENV VITE_API_BASE=/api
ENV VITE_WEBRTC_URL=/webrtc

# 🏗️ Build the Vite app
RUN npm run build

# ─── Stage 2: Serve with NGINX ───────────────────────────────────
FROM nginx:stable-alpine

WORKDIR /usr/share/nginx/html

# 🔐 Generate self-signed certs so nginx always has something to load
RUN apk add --no-cache openssl && \
    mkdir -p /etc/nginx/certs && \
    openssl req -x509 -nodes -days 365 \
      -subj "/CN=localhost" \
      -newkey rsa:2048 \
      -keyout /etc/nginx/certs/privkey.pem \
      -out /etc/nginx/certs/fullchain.pem

# 🚚 Copy built assets from builder stage
COPY --from=builder /app/jamz-client-vite/dist .

# ⚙️ Apply nginx config (make sure this file exists)
# The bundled `docker/frontend/nginx.conf` is a full nginx config (contains
# `worker_processes` and `http` blocks) and must replace the main nginx.conf,
# not a conf.d fragment.
COPY docker/frontend/nginx.conf /etc/nginx/nginx.conf

# 🔐 Entrypoint
COPY docker/frontend/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# 🚀 Launch container via TLS-aware entrypoint
CMD ["/entrypoint.sh"]

EXPOSE 80
EXPOSE 443
