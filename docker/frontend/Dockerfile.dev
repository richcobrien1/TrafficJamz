# Dockerfile for the frontend development environment
FROM node:18-alpine

# Set working directory for full context awareness
WORKDIR /app/frontend

# Install system build tools (needed by some MUI and emotion packages)
RUN apk add --no-cache python3 make g++ 

# Copy package manifest before code for layer caching
COPY frontend/package*.json ./

# Install dependencies inside container
RUN npm install --legacy-peer-deps

# Copy source code and shared modules
COPY frontend/src ./src
COPY frontend/public ./public
COPY shared ./shared

# Set environment flags for dev tooling
ENV NODE_ENV=development
ENV REACT_APP_API_URL=http://localhost:5000
ENV REACT_APP_WEBRTC_URL=http://localhost:5000

# Expose dev port
EXPOSE 8080

# Optional: TLS/Nginx support (if used by HTTPS dev mode)
COPY docker/frontend/nginx.dev.conf /etc/nginx/nginx.dev.conf
COPY docker/frontend/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Start React dev server with hot reload
CMD ["npm", "start"]
