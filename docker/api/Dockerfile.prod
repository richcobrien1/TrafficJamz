# docker/api/Dockerfile.prod
# Production Dockerfile for the TrafficJamz API service

# ðŸ§± Stage 1: Builder
FROM node:18-alpine AS builder

WORKDIR /app/backend

# Install build dependencies
RUN apk add --no-cache python3 py3-pip make g++ linux-headers curl

# Copy package manifests and install only production dependencies
COPY backend/package*.json ./
RUN npm ci --only=production

# Copy backend source and shared modules
COPY backend/src ./src
COPY backend/config ./config
COPY shared ../shared

# ðŸš€ Stage 2: Runtime
FROM node:18-alpine

WORKDIR /app/backend

# Copy compiled app and node_modules from builder stage
COPY --from=builder /app/backend/node_modules ./node_modules
COPY --from=builder /app/backend/src ./src
COPY --from=builder /app/backend/config ./config
COPY --from=builder /app/backend/shared ./shared

# Production environment flags
ENV NODE_ENV=production
ENV IS_LOCAL=false

# Expose app port
EXPOSE 5000

# Healthcheck: simple curl probe to validate liveness
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:5000/health || exit 1

# Start the API
CMD ["node", "src/api/server.js"]
